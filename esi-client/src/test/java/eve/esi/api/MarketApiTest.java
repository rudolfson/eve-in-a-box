/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.6.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package eve.esi.api;

import eve.esi.invoke.ApiException;
import eve.esi.model.Forbidden;
import eve.esi.model.GetCharactersCharacterIdOrders200Ok;
import eve.esi.model.GetMarketsGroupsMarketGroupIdNotFound;
import eve.esi.model.GetMarketsGroupsMarketGroupIdOk;
import eve.esi.model.GetMarketsPrices200Ok;
import eve.esi.model.GetMarketsRegionIdHistory200Ok;
import eve.esi.model.GetMarketsRegionIdHistoryUnprocessableEntity;
import eve.esi.model.GetMarketsRegionIdOrders200Ok;
import eve.esi.model.GetMarketsRegionIdOrdersUnprocessableEntity;
import eve.esi.model.GetMarketsStructuresStructureId200Ok;
import eve.esi.model.InternalServerError;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MarketApi
 */
@Ignore
public class MarketApiTest {

    private final MarketApi api = new MarketApi();

    
    /**
     * List orders from a character
     *
     * List market orders placed by a character  ---  This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdOrdersTest() throws ApiException {
        Integer characterId = null;
        String datasource = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetCharactersCharacterIdOrders200Ok> response = api.getCharactersCharacterIdOrders(characterId, datasource, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get item groups
     *
     * Get a list of item groups  ---  This route expires daily at 11:05
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMarketsGroupsTest() throws ApiException {
        String datasource = null;
        String userAgent = null;
        String xUserAgent = null;
        List<Integer> response = api.getMarketsGroups(datasource, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * Get item group information
     *
     * Get information on an item group  ---  This route expires daily at 11:05
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMarketsGroupsMarketGroupIdTest() throws ApiException {
        Integer marketGroupId = null;
        String datasource = null;
        String language = null;
        String userAgent = null;
        String xUserAgent = null;
        GetMarketsGroupsMarketGroupIdOk response = api.getMarketsGroupsMarketGroupId(marketGroupId, datasource, language, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * List market prices
     *
     * Return a list of prices  ---  This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMarketsPricesTest() throws ApiException {
        String datasource = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetMarketsPrices200Ok> response = api.getMarketsPrices(datasource, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * List historical market statistics in a region
     *
     * Return a list of historical market statistics for the specified type in a region  ---  This route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMarketsRegionIdHistoryTest() throws ApiException {
        Integer regionId = null;
        Integer typeId = null;
        String datasource = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetMarketsRegionIdHistory200Ok> response = api.getMarketsRegionIdHistory(regionId, typeId, datasource, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * List orders in a region
     *
     * Return a list of orders in a region  ---  This route is cached for up to 300 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMarketsRegionIdOrdersTest() throws ApiException {
        String orderType = null;
        Integer regionId = null;
        String datasource = null;
        Integer page = null;
        Integer typeId = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetMarketsRegionIdOrders200Ok> response = api.getMarketsRegionIdOrders(orderType, regionId, datasource, page, typeId, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * List type IDs relevant to a market
     *
     * Return a list of type IDs that have active orders in the region, for efficient market indexing.  ---  This route is cached for up to 600 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMarketsRegionIdTypesTest() throws ApiException {
        Integer regionId = null;
        String datasource = null;
        Integer page = null;
        String userAgent = null;
        String xUserAgent = null;
        List<Integer> response = api.getMarketsRegionIdTypes(regionId, datasource, page, userAgent, xUserAgent);

        // TODO: test validations
    }
    
    /**
     * List orders in a structure
     *
     * Return all orders in a structure  ---  This route is cached for up to 300 seconds
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMarketsStructuresStructureIdTest() throws ApiException {
        Long structureId = null;
        String datasource = null;
        Integer page = null;
        String token = null;
        String userAgent = null;
        String xUserAgent = null;
        List<GetMarketsStructuresStructureId200Ok> response = api.getMarketsStructuresStructureId(structureId, datasource, page, token, userAgent, xUserAgent);

        // TODO: test validations
    }
    
}
