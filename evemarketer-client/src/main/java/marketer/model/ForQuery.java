/*
 * EVEMarketer Marketstat API
 * EVEMarketer Marketstat API is almost compatible with EVE-Central's Marketstat API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package marketer.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ForQuery
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-30T13:45:53.814Z")
public class ForQuery {
  @SerializedName("bid")
  private Boolean bid = null;

  @SerializedName("types")
  private List<Integer> types = null;

  @SerializedName("regions")
  private List<Integer> regions = null;

  @SerializedName("systems")
  private List<Integer> systems = null;

  @SerializedName("hours")
  private Integer hours = null;

  @SerializedName("minq")
  private Integer minq = null;

  public ForQuery bid(Boolean bid) {
    this.bid = bid;
    return this;
  }

   /**
   * is buy?
   * @return bid
  **/
  @ApiModelProperty(value = "is buy?")
  public Boolean isBid() {
    return bid;
  }

  public void setBid(Boolean bid) {
    this.bid = bid;
  }

  public ForQuery types(List<Integer> types) {
    this.types = types;
    return this;
  }

  public ForQuery addTypesItem(Integer typesItem) {
    if (this.types == null) {
      this.types = new ArrayList<>();
    }
    this.types.add(typesItem);
    return this;
  }

   /**
   * Type IDs
   * @return types
  **/
  @ApiModelProperty(value = "Type IDs")
  public List<Integer> getTypes() {
    return types;
  }

  public void setTypes(List<Integer> types) {
    this.types = types;
  }

  public ForQuery regions(List<Integer> regions) {
    this.regions = regions;
    return this;
  }

  public ForQuery addRegionsItem(Integer regionsItem) {
    if (this.regions == null) {
      this.regions = new ArrayList<>();
    }
    this.regions.add(regionsItem);
    return this;
  }

   /**
   * Region IDs
   * @return regions
  **/
  @ApiModelProperty(value = "Region IDs")
  public List<Integer> getRegions() {
    return regions;
  }

  public void setRegions(List<Integer> regions) {
    this.regions = regions;
  }

  public ForQuery systems(List<Integer> systems) {
    this.systems = systems;
    return this;
  }

  public ForQuery addSystemsItem(Integer systemsItem) {
    if (this.systems == null) {
      this.systems = new ArrayList<>();
    }
    this.systems.add(systemsItem);
    return this;
  }

   /**
   * System IDs
   * @return systems
  **/
  @ApiModelProperty(value = "System IDs")
  public List<Integer> getSystems() {
    return systems;
  }

  public void setSystems(List<Integer> systems) {
    this.systems = systems;
  }

  public ForQuery hours(Integer hours) {
    this.hours = hours;
    return this;
  }

   /**
   * always 0
   * @return hours
  **/
  @ApiModelProperty(value = "always 0")
  public Integer getHours() {
    return hours;
  }

  public void setHours(Integer hours) {
    this.hours = hours;
  }

  public ForQuery minq(Integer minq) {
    this.minq = minq;
    return this;
  }

   /**
   * always 0
   * @return minq
  **/
  @ApiModelProperty(value = "always 0")
  public Integer getMinq() {
    return minq;
  }

  public void setMinq(Integer minq) {
    this.minq = minq;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ForQuery forQuery = (ForQuery) o;
    return Objects.equals(this.bid, forQuery.bid) &&
        Objects.equals(this.types, forQuery.types) &&
        Objects.equals(this.regions, forQuery.regions) &&
        Objects.equals(this.systems, forQuery.systems) &&
        Objects.equals(this.hours, forQuery.hours) &&
        Objects.equals(this.minq, forQuery.minq);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bid, types, regions, systems, hours, minq);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ForQuery {\n");
    
    sb.append("    bid: ").append(toIndentedString(bid)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("    regions: ").append(toIndentedString(regions)).append("\n");
    sb.append("    systems: ").append(toIndentedString(systems)).append("\n");
    sb.append("    hours: ").append(toIndentedString(hours)).append("\n");
    sb.append("    minq: ").append(toIndentedString(minq)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

